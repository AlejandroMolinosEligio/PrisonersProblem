
import os
import sys
import random


## CLASS PRISIONER

class Prisioner():

    def __init__(self, name: str, func):
        self.estrategy = func
        self.name = name

## ESTRATEGIES
## 1 COPERATE / 0 NO COPERATE

def TitForTat(iteration: int, own_list: list, other_list: list):

    if iteration==0: return 1

    return other_list[-1]

def Dumb(iteration: int, own_list: list, other_list: list):

    return 1

def Devil(iteration: int, own_list: list, other_list: list):

    return 0

def Friedman(iteration: int, own_list: list, other_list: list):

    if iteration==0: return 1

    if other_list[-1]==0 or own_list[-1]==0:
        return 0

    return 1

def Joss(iteration: int, own_list: list, other_list: list):

    if iteration==0: return 1

    if 0.1>random.random():
        return 0

    return other_list[-1]
    

def Random(iteration: int, own_list: list, other_list: list):

    if random.random()<0.5:
        return 0

    return 1
        
class Negotiation():

    def __init__(self,prio1: Prisioner, prio2: Prisioner, prio1_values: list =[], prio2_values: list =[],prio1_score: int=0, prio2_score:int=0, iterations: int=0):
        self.prio1 = prio1
        self.prio2 = prio2
        self.prio1_values = prio1_values
        self.prio2_values = prio2_values
        self.iterations = iterations
        self.prio1_score = prio1_score
        self.prio2_score = prio2_score

    def start(self, verbose=False):

        for i in range(self.iterations):
            prio1_value = self.prio1.estrategy(i,self.prio1_values,self.prio2_values)
            prio2_value = self.prio2.estrategy(i,self.prio2_values,self.prio1_values)

            if prio1_value==1 and prio2_value==1:
                self.prio1_score += 3
                self.prio2_score += 3
            elif prio1_value == 0 and prio2_value==1:
                self.prio1_score += 5
            elif prio1_value == 1 and prio2_value==0:
                self.prio2_score += 5
            else:
                self.prio1_score += 1
                self.prio2_score += 1
            
            self.prio1_values.append(prio1_value)
            self.prio2_values.append(prio2_value)

        if verbose:

            print(f'Prisioner {self.prio1.name} score: {self.prio1_score}')
            print(f'Prisioner {self.prio2.name} score: {self.prio2_score}')

            print(f'Max score {self.iterations*5} - Min score {str(0)}')

        estategies_scores[self.prio1.name] += self.prio1_score
        estategies_scores[self.prio2.name] += self.prio2_score


## GLOBALS

estrategies = [('Dumb',Dumb), ('TitForTat', TitForTat), ('Devil',Devil), ('Friedman',Friedman), ('Random',Random),('Joss',Joss)]

estategies_scores = {'Dumb':0, 'TitForTat':0, 'Devil':0, 'Joss':0,'Random':0, 'Friedman':0}

def main():

    for int1 in range(len(estrategies)):
    
        for int2 in range(len(estrategies)):

            prio1_args = estrategies[int1]
            prio2_args = estrategies[int2]

            prio1 = Prisioner(prio1_args[0],prio1_args[1])
            prio2 = Prisioner(prio2_args[0],prio2_args[1])
            nego = Negotiation(prio1,prio2, iterations=200)
            nego.start()

    
    print('\n')

    for estr in estategies_scores:
        print(f'Prisioner {estr} - FINAL SCORE: {estategies_scores[estr]}')

    final_list = list(estategies_scores.items())

    final_list.sort(key= lambda x:x[1], reverse=True)

    print('\n')

    print(final_list)


if __name__=='__main__':
    main()
